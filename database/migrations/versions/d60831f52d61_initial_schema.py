"""Initial schema

Revision ID: 196039e5a525
Revises: 
Create Date: 2025-03-07 21:03:53.512810

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '196039e5a525'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create tables with no foreign key dependencies first
    op.create_table('committee',
        sa.Column('committee_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=True),
        sa.Column('division', sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint('committee_id')
    )
    
    op.create_table('meeting',
        sa.Column('meeting_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.PrimaryKeyConstraint('meeting_id')
    )
    
    op.create_table('position',
        sa.Column('position_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('level', sa.String(length=255), nullable=False),
        sa.Column('is_coordinator', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('position_id')
    )
    
    op.create_table('recruitment_cycle',
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('semester', sa.String(length=255), nullable=False),
        sa.Column('year', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('cycle_id')
    )
    
    # Create tables that depend on the ones above
    op.create_table('app_question',
        sa.Column('app_question_id', sa.Integer(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('question_text', sa.Text(), nullable=False),
        sa.Column('max_score', sa.Integer(), nullable=False),
        sa.Column('required', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['cycle_id'], ['recruitment_cycle.cycle_id'], ),
        sa.PrimaryKeyConstraint('app_question_id')
    )
    
    op.create_table('applicant',
        sa.Column('applicant_id', sa.Integer(), nullable=False),
        sa.Column('first_name', sa.String(length=255), nullable=False),
        sa.Column('last_name', sa.String(length=255), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('major', sa.String(length=255), nullable=False),
        sa.Column('grad_sem', sa.String(length=255), nullable=False),
        sa.Column('grad_year', sa.Integer(), nullable=False),
        sa.Column('recruitment_id', sa.Integer(), nullable=False),
        sa.Column('admission', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['recruitment_id'], ['recruitment_cycle.cycle_id'], ),
        sa.PrimaryKeyConstraint('applicant_id')
    )
    
    op.create_table('committee_activity',
        sa.Column('activity_id', sa.Integer(), nullable=False),
        sa.Column('committee_id', sa.Integer(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column('type', sa.String(length=255), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['committee_id'], ['committee.committee_id'], ),
        sa.PrimaryKeyConstraint('activity_id')
    )
    
    op.create_table('event',
        sa.Column('event_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('category', sa.String(length=255), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column('location', sa.String(length=255), nullable=False),
        sa.Column('committee_id', sa.Integer(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['committee_id'], ['committee.committee_id'], ),
        sa.PrimaryKeyConstraint('event_id')
    )
    
    op.create_table('interview_question',
        sa.Column('interview_question_id', sa.Integer(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('question_text', sa.Text(), nullable=False),
        sa.Column('max_score', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['cycle_id'], ['recruitment_cycle.cycle_id'], ),
        sa.PrimaryKeyConstraint('interview_question_id')
    )
    
    op.create_table('app_response',
        sa.Column('app_response_id', sa.Integer(), nullable=False),
        sa.Column('applicant_id', sa.Integer(), nullable=False),
        sa.Column('question_id', sa.Integer(), nullable=False),
        sa.Column('response_text', sa.Text(), nullable=False),
        sa.Column('submission_date', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['applicant_id'], ['applicant.applicant_id'], ),
        sa.ForeignKeyConstraint(['question_id'], ['app_question.app_question_id'], ),
        sa.PrimaryKeyConstraint('app_response_id')
    )
    
    op.create_table('application',
        sa.Column('app_id', sa.Integer(), nullable=False),
        sa.Column('applicant_id', sa.Integer(), nullable=False),
        sa.Column('active', sa.Boolean(), nullable=False),
        sa.Column('created_time', sa.DateTime(), nullable=False),
        sa.Column('closed_time', sa.DateTime(), nullable=False),
        sa.Column('review_completion_time', sa.DateTime(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['applicant_id'], ['applicant.applicant_id'], ),
        sa.ForeignKeyConstraint(['cycle_id'], ['recruitment_cycle.cycle_id'], ),
        sa.PrimaryKeyConstraint('app_id')
    )
    
    # Create mentorship_group table without the foreign key constraint to member first
    op.create_table('mentorship_group',
        sa.Column('mentorship_id', sa.Integer(), nullable=False),
        sa.Column('lead_mentor_id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('mentorship_id')
    )
    
    # Create member table with reference to mentorship_group
    op.create_table('member',
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('applicant_id', sa.Integer(), nullable=False),
        sa.Column('phone', sa.String(length=255), nullable=False),
        sa.Column('cohort_sem', sa.String(length=255), nullable=False),
        sa.Column('cohort_year', sa.Integer(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('standing', sa.String(length=255), nullable=False),
        sa.Column('mentorship_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['applicant_id'], ['applicant.applicant_id'], ),
        sa.ForeignKeyConstraint(['mentorship_id'], ['mentorship_group.mentorship_id'], ),
        sa.PrimaryKeyConstraint('member_id')
    )
    
    # Now add the lead_mentor_id foreign key constraint to mentorship_group
    op.create_foreign_key(
        'fk_mentorship_group_lead_mentor_id_member',
        'mentorship_group', 'member',
        ['lead_mentor_id'], ['member_id']
    )
    
    # Create remaining tables dependent on member
    op.create_table('meeting_attendance',
        sa.Column('attendance_id', sa.Integer(), nullable=False),
        sa.Column('meeting_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('present', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['meeting_id'], ['meeting.meeting_id'], ),
        sa.ForeignKeyConstraint(['member_id'], ['member.member_id'], ),
        sa.PrimaryKeyConstraint('attendance_id')
    )
    
    op.create_table('member_history',
        sa.Column('history_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('position_id', sa.Integer(), nullable=False),
        sa.Column('committee_id', sa.Integer(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(['committee_id'], ['committee.committee_id'], ),
        sa.ForeignKeyConstraint(['member_id'], ['member.member_id'], ),
        sa.ForeignKeyConstraint(['position_id'], ['position.position_id'], ),
        sa.PrimaryKeyConstraint('history_id')
    )
    
    op.create_table('mentorship_activity',
        sa.Column('activity_id', sa.Integer(), nullable=False),
        sa.Column('mentorship_id', sa.Integer(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column('type', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['mentorship_id'], ['mentorship_group.mentorship_id'], ),
        sa.PrimaryKeyConstraint('activity_id')
    )
    
    op.create_table('points',
        sa.Column('points_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('career_fair', sa.Integer(), nullable=False),
        sa.Column('eng_dev', sa.Integer(), nullable=False),
        sa.Column('social', sa.Integer(), nullable=False),
        sa.Column('committee', sa.Integer(), nullable=False),
        sa.Column('events', sa.Integer(), nullable=False),
        sa.Column('outreach', sa.Integer(), nullable=False),
        sa.Column('misc', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['member_id'], ['member.member_id'], ),
        sa.PrimaryKeyConstraint('points_id')
    )
    
    op.create_table('reviewer',
        sa.Column('reviewer_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['cycle_id'], ['recruitment_cycle.cycle_id'], ),
        sa.ForeignKeyConstraint(['member_id'], ['member.member_id'], ),
        sa.PrimaryKeyConstraint('reviewer_id')
    )
    
    op.create_table('slack_engagement',
        sa.Column('slack_id', sa.Integer(), nullable=False),
        sa.Column('engagement', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('week_start_date', sa.Date(), nullable=False),
        sa.Column('week_end_date', sa.Date(), nullable=False),
        sa.Column('messages_sent', sa.Integer(), nullable=False),
        sa.Column('reactions_given', sa.Integer(), nullable=False),
        sa.Column('replies_sent', sa.Integer(), nullable=False),
        sa.Column('threads_started', sa.Integer(), nullable=False),
        sa.Column('active_channels', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['member_id'], ['member.member_id'], ),
        sa.PrimaryKeyConstraint('slack_id')
    )
    
    op.create_table('activity_attendance',
        sa.Column('attendance_id', sa.Integer(), nullable=False),
        sa.Column('activity_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('present', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['activity_id'], ['committee_activity.activity_id'], ),
        sa.ForeignKeyConstraint(['member_id'], ['member.member_id'], ),
        sa.PrimaryKeyConstraint('attendance_id')
    )
    
    op.create_table('event_attendance',
        sa.Column('attendance_id', sa.Integer(), nullable=False),
        sa.Column('event_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('present', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
        sa.ForeignKeyConstraint(['member_id'], ['member.member_id'], ),
        sa.PrimaryKeyConstraint('attendance_id')
    )
    
    op.create_table('event_feedback',
        sa.Column('feedback_id', sa.Integer(), nullable=False),
        sa.Column('event_id', sa.Integer(), nullable=False),
        sa.Column('member_id', sa.Integer(), nullable=False),
        sa.Column('rating', sa.Integer(), nullable=False),
        sa.Column('comments', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
        sa.ForeignKeyConstraint(['member_id'], ['member.member_id'], ),
        sa.PrimaryKeyConstraint('feedback_id')
    )
    
    op.create_table('review_assignment',
        sa.Column('assignment_id', sa.Integer(), nullable=False),
        sa.Column('applicant_id', sa.Integer(), nullable=False),
        sa.Column('reviewer_id', sa.Integer(), nullable=False),
        sa.Column('assigned_date', sa.DateTime(), nullable=False),
        sa.Column('completed', sa.Boolean(), nullable=False),
        sa.Column('completed_date', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['applicant_id'], ['applicant.applicant_id'], ),
        sa.ForeignKeyConstraint(['reviewer_id'], ['reviewer.reviewer_id'], ),
        sa.PrimaryKeyConstraint('assignment_id')
    )
    
    op.create_table('app_question_score',
        sa.Column('app_question_score_id', sa.Integer(), nullable=False),
        sa.Column('assignment_id', sa.Integer(), nullable=False),
        sa.Column('question_id', sa.Integer(), nullable=False),
        sa.Column('response_id', sa.Integer(), nullable=False),
        sa.Column('score', sa.Integer(), nullable=False),
        sa.Column('comments', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['assignment_id'], ['review_assignment.assignment_id'], ),
        sa.ForeignKeyConstraint(['question_id'], ['app_question.app_question_id'], ),
        sa.ForeignKeyConstraint(['response_id'], ['app_response.app_response_id'], ),
        sa.PrimaryKeyConstraint('app_question_score_id')
    )
    
    op.create_table('app_review',
        sa.Column('review_id', sa.Integer(), nullable=False),
        sa.Column('app_id', sa.Integer(), nullable=False),
        sa.Column('overall_score', sa.Integer(), nullable=False),
        sa.Column('comments', sa.Text(), nullable=False),
        sa.Column('recommendation', sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(['app_id'], ['application.app_id'], ),
        sa.PrimaryKeyConstraint('review_id')
    )
    
    op.create_table('interview',
        sa.Column('interview_id', sa.Integer(), nullable=False),
        sa.Column('cycle_id', sa.Integer(), nullable=False),
        sa.Column('app_id', sa.Integer(), nullable=False),
        sa.Column('applicant_id', sa.Integer(), nullable=False),
        sa.Column('overall_score', sa.Integer(), nullable=False),
        sa.Column('decision', sa.String(length=255), nullable=False),
        sa.Column('comments', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['app_id'], ['application.app_id'], ),
        sa.ForeignKeyConstraint(['applicant_id'], ['applicant.applicant_id'], ),
        sa.ForeignKeyConstraint(['cycle_id'], ['recruitment_cycle.cycle_id'], ),
        sa.PrimaryKeyConstraint('interview_id')
    )
    
    op.create_table('interview_score',
        sa.Column('interview_score_id', sa.Integer(), nullable=False),
        sa.Column('interview_id', sa.Integer(), nullable=False),
        sa.Column('reviewer_id', sa.Integer(), nullable=False),
        sa.Column('score', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['interview_id'], ['interview.interview_id'], ),
        sa.ForeignKeyConstraint(['reviewer_id'], ['reviewer.reviewer_id'], ),
        sa.PrimaryKeyConstraint('interview_score_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('interview_score')
    op.drop_table('interview')
    op.drop_table('app_review')
    op.drop_table('app_question_score')
    op.drop_table('review_assignment')
    op.drop_table('event_feedback')
    op.drop_table('event_attendance')
    op.drop_table('activity_attendance')
    op.drop_table('slack_engagement')
    op.drop_table('reviewer')
    op.drop_table('points')
    op.drop_table('mentorship_activity')
    op.drop_table('member_history')
    op.drop_table('meeting_attendance')
    # Drop the foreign key constraint first
    op.drop_constraint('fk_mentorship_group_lead_mentor_id_member', 'mentorship_group', type_='foreignkey')
    op.drop_table('member')
    op.drop_table('mentorship_group')
    op.drop_table('application')
    op.drop_table('app_response')
    op.drop_table('interview_question')
    op.drop_table('event')
    op.drop_table('committee_activity')
    op.drop_table('applicant')
    op.drop_table('app_question')
    op.drop_table('recruitment_cycle')
    op.drop_table('position')
    op.drop_table('meeting')
    op.drop_table('committee')
    # ### end Alembic commands ###