"""Fix questions, application, and interview table relationship

Revision ID: a67b21dbb4c9
Revises: dc8e527bd4ab
Create Date: 2025-03-08 20:53:12.456919

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a67b21dbb4c9'
down_revision: Union[str, None] = 'dc8e527bd4ab'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('question',
        sa.Column('question_id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('text', sa.Text(), nullable=False),
        sa.Column('type', sa.Enum('APPLICATION', 'INTERVIEW', name='questiontype'), nullable=False),
        sa.Column('audience', sa.Enum('MEMBER', 'NON_MEMBER', name='questionaudience'), nullable=False),
        sa.Column('word_limit', sa.Integer(), nullable=True),
        sa.Column('max_score', sa.Integer(), nullable=True),
        sa.Column('required', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('question_id')
    )
    
    op.create_table('application_question',
        sa.Column('application_question_id', sa.Integer(), nullable=False),
        sa.Column('app_id', sa.Integer(), nullable=False),
        sa.Column('question_id', sa.Integer(), nullable=False),
        sa.Column('display_order', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['app_id'], ['application.app_id'], ),
        sa.ForeignKeyConstraint(['question_id'], ['question.question_id'], ),
        sa.PrimaryKeyConstraint('application_question_id')
    )
    
    # First modify dependent tables to remove foreign key constraints
    op.drop_constraint('app_response_question_id_fkey', 'app_response', type_='foreignkey')
    op.drop_constraint('app_question_score_question_id_fkey', 'app_question_score', type_='foreignkey')
    
    # Now add the new columns to dependent tables before dropping the old ones
    op.add_column('app_response', sa.Column('application_question_id', sa.Integer(), nullable=True))
    op.add_column('app_question_score', sa.Column('application_question_id', sa.Integer(), nullable=True))
    
    # Update data for new columns if needed (you may need to add code to migrate existing data)
    # This is a placeholder for data migration code if needed
    
    # Create new foreign key constraints
    op.create_foreign_key(None, 'app_response', 'application_question', ['application_question_id'], ['application_question_id'])
    op.create_foreign_key(None, 'app_question_score', 'application_question', ['application_question_id'], ['application_question_id'])
    
    # Now it's safe to drop the old columns
    op.drop_column('app_response', 'question_id')
    op.drop_column('app_question_score', 'question_id')
    
    # Finally, drop the table that's no longer needed
    op.drop_table('app_question')
    
    # Rest of the changes
    op.add_column('application', sa.Column('title', sa.String(length=255), nullable=False))
    op.add_column('interview', sa.Column('title', sa.String(length=255), nullable=False))
    
    # Handle interview_question table changes
    # First add new columns
    op.add_column('interview_question', sa.Column('interview_id', sa.Integer(), nullable=True))
    op.add_column('interview_question', sa.Column('question_id', sa.Integer(), nullable=True))
    op.add_column('interview_question', sa.Column('display_order', sa.Integer(), nullable=True))
    
    # Update data if needed (you may need to add migration code here)
    # Set temporary nullable=True above, then set not null constraints after data is populated
    
    # Now create new constraints 
    op.create_foreign_key(None, 'interview_question', 'interview', ['interview_id'], ['interview_id'])
    op.create_foreign_key(None, 'interview_question', 'question', ['question_id'], ['question_id'])
    
    # After data migration, set not null constraints
    op.alter_column('interview_question', 'interview_id', nullable=False)
    op.alter_column('interview_question', 'question_id', nullable=False)
    op.alter_column('interview_question', 'display_order', nullable=False)
    
    # Now safe to drop the old constraint and columns
    op.drop_constraint('interview_question_cycle_id_fkey', 'interview_question', type_='foreignkey')
    op.drop_column('interview_question', 'cycle_id')
    op.drop_column('interview_question', 'max_score')
    op.drop_column('interview_question', 'question_text')
    
    # Interview score table changes
    op.add_column('interview_score', sa.Column('interview_question_id', sa.Integer(), nullable=False))
    op.add_column('interview_score', sa.Column('comments', sa.Text(), nullable=True))
    op.create_foreign_key(None, 'interview_score', 'interview_question', ['interview_question_id'], ['interview_question_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'interview_score', type_='foreignkey')
    op.drop_column('interview_score', 'comments')
    op.drop_column('interview_score', 'interview_question_id')
    
    # Recreate original interview_question structure
    op.add_column('interview_question', sa.Column('question_text', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('interview_question', sa.Column('max_score', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('interview_question', sa.Column('cycle_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'interview_question', type_='foreignkey')
    op.drop_constraint(None, 'interview_question', type_='foreignkey')
    op.create_foreign_key('interview_question_cycle_id_fkey', 'interview_question', 'recruitment_cycle', ['cycle_id'], ['cycle_id'])
    op.drop_column('interview_question', 'display_order')
    op.drop_column('interview_question', 'question_id')
    op.drop_column('interview_question', 'interview_id')
    
    op.drop_column('interview', 'title')
    op.drop_column('application', 'title')
    
    # Recreate app_question table first
    op.create_table('app_question',
        sa.Column('app_question_id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('cycle_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('question_text', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('max_score', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('required', sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['cycle_id'], ['recruitment_cycle.cycle_id'], name='app_question_cycle_id_fkey'),
        sa.PrimaryKeyConstraint('app_question_id', name='app_question_pkey')
    )
    
    # Add old columns back to dependent tables
    op.add_column('app_question_score', sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('app_response', sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=True))
    
    # Migrate data if needed
    
    # Set not null constraints after data migration
    op.alter_column('app_question_score', 'question_id', nullable=False)
    op.alter_column('app_response', 'question_id', nullable=False)
    
    # Create old foreign key constraints
    op.create_foreign_key('app_question_score_question_id_fkey', 'app_question_score', 'app_question', ['question_id'], ['app_question_id'])
    op.create_foreign_key('app_response_question_id_fkey', 'app_response', 'app_question', ['question_id'], ['app_question_id'])
    
    # Drop new columns and constraints
    op.drop_constraint(None, 'app_question_score', type_='foreignkey')
    op.drop_constraint(None, 'app_response', type_='foreignkey')
    op.drop_column('app_response', 'application_question_id')
    op.drop_column('app_question_score', 'application_question_id')
    
    # Finally drop the new tables
    op.drop_table('application_question')
    op.drop_table('question')
    # ### end Alembic commands ###